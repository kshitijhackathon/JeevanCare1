import speech_recognition as sr
import pyttsx3

# Text-to-Speech setup
engine = pyttsx3.init()
engine.setProperty('rate', 150)

# Disease data with English, Hindi, and slang variations
DISEASE_DATABASE = {
    "malaria": {
        "hinglish": ["‡§Æ‡§≤‡•á‡§∞‡§ø‡§Ø‡§æ", "maleria", "bukhar wali bimari", "machhar wala bukhar"],
        "medication": "Antimalarials (Chloroquine, Artemisinin)",
        "warning": "Prevent mosquito bites, avoid stagnant water"
    },
    "dengue": {
        "hinglish": ["‡§°‡•á‡§Ç‡§ó‡•Ç", "dengu", "platelet kam hona", "haddi tod bukhar"],
        "medication": "Hydration, Paracetamol (avoid Aspirin)",
        "warning": "Platelet monitoring, no NSAIDs"
    },
    "typhoid": {
        "hinglish": ["‡§ü‡§æ‡§Ø‡§´‡§æ‡§á‡§°", "taifoid", "pani wala bukhar"],
        "medication": "Antibiotics (Ciprofloxacin, Azithromycin)",
        "warning": "Boil water, hygiene important"
    },
    "tuberculosis": {
        "hinglish": ["‡§ü‡•Ä‡§¨‡•Ä", "tb", "tuberculosis", "khaansi wali bimari", "phephdo ka rog"],
        "medication": "DOTS therapy (Rifampin, Isoniazid)",
        "warning": "Complete course, avoid alcohol"
    },
    "cholera": {
        "hinglish": ["‡§π‡•à‡§ú‡§æ", "haija", "ultii dast ki bimari"],
        "medication": "ORS, Antibiotics (Doxycycline)",
        "warning": "Drink clean water, hygiene"
    },
    "hypertension": {
        "hinglish": ["‡§π‡§æ‡§à ‡§¨‡•Ä‡§™‡•Ä", "high bp", "bp badhna", "blood pressure"],
        "medication": "Beta-blockers (Atenolol), ACE inhibitors",
        "warning": "Low salt, regular checkup"
    },
    "coronary artery disease": {
        "hinglish": ["‡§¶‡§ø‡§≤ ‡§ï‡•Ä ‡§¨‡•ç‡§≤‡•â‡§ï‡•á‡§ú", "heart blockage", "dil ki naali band"],
        "medication": "Statins (Atorvastatin), Aspirin",
        "warning": "Avoid fatty foods, exercise"
    },
    "heart attack": {
        "hinglish": ["‡§π‡§æ‡§∞‡•ç‡§ü ‡§Ö‡§ü‡•à‡§ï", "dil ka daura", "heart fail", "attack aaya"],
        "medication": "Clopidogrel, Nitroglycerin",
        "warning": "Emergency help needed"
    },
    "stroke": {
        "hinglish": ["‡§™‡§ï‡•ç‡§∑‡§æ‡§ò‡§æ‡§§", "stroke", "lakwa", "half body bandh"],
        "medication": "Clot-busters (tPA), Blood thinners",
        "warning": "FAST test (Face-Arm-Speech-Time)"
    },
    "diabetes": {
        "hinglish": ["‡§∂‡•Å‡§ó‡§∞", "sugar", "sugar ki bimari", "blood sugar"],
        "medication": "Metformin, Insulin",
        "warning": "Avoid sweets, exercise"
    },
    "hypothyroidism": {
        "hinglish": ["‡§•‡§æ‡§Ø‡§∞‡§æ‡§á‡§°", "thyroid", "gala ki bimari"],
        "medication": "Levothyroxine",
        "warning": "Regular TSH test"
    },
    "pcos": {
        "hinglish": ["‡§™‡•Ä‡§∏‡•Ä‡§ì‡§è‡§∏", "pcos", "mahine ki dikkat", "periods ka problem"],
        "medication": "Birth control pills, Metformin",
        "warning": "Weight management"
    },
    "gout": {
        "hinglish": ["‡§ó‡§æ‡§â‡§ü", "gout", "joint pain", "gathiya"],
        "medication": "Allopurinol, NSAIDs",
        "warning": "Avoid red meat, alcohol"
    },
    "acidity": {
        "hinglish": ["‡§è‡§∏‡§ø‡§°‡§ø‡§ü‡•Ä", "acid", "pet me jalan", "ultee jaisi feeling"],
        "medication": "Antacids (Pantoprazole)",
        "warning": "Avoid spicy food"
    },
    "ibs": {
        "hinglish": ["‡§™‡•á‡§ü ‡§ï‡•Ä ‡§ó‡§°‡§º‡§¨‡§°‡§º", "gas", "kabj", "loose motion"],
        "medication": "Fiber supplements",
        "warning": "Stress management"
    },
    "ulcer": {
        "hinglish": ["‡§Ö‡§≤‡•ç‡§∏‡§∞", "ulser", "pet ka ghao"],
        "medication": "Antibiotics (H. pylori treatment)",
        "warning": "No smoking, alcohol"
    },
    "jaundice": {
        "hinglish": ["‡§™‡•Ä‡§≤‡§ø‡§Ø‡§æ", "piliya", "yellow eyes", "peela rang"],
        "medication": "Hydration, Liver support",
        "warning": "Avoid fatty foods"
    },
    "asthma": {
        "hinglish": ["‡§¶‡§Æ‡§æ", "asthma", "saans ki takleef", "inhaler wali bimari"],
        "medication": "Inhalers (Salbutamol)",
        "warning": "Avoid dust, smoke"
    },
    "copd": {
        "hinglish": ["‡§∏‡•Ä‡§ì‡§™‡•Ä‡§°‡•Ä", "copd", "chronic khaansi"],
        "medication": "Bronchodilators",
        "warning": "Quit smoking"
    },
    "pneumonia": {
        "hinglish": ["‡§®‡§ø‡§Æ‡•ã‡§®‡§ø‡§Ø‡§æ", "pneumonia", "phephde ka infection"],
        "medication": "Antibiotics (Azithromycin)",
        "warning": "Vaccination (PCV)"
    },
    "migraine": {
        "hinglish": ["‡§Æ‡§æ‡§á‡§ó‡•ç‡§∞‡•á‡§®", "migraine", "sirdard", "headache", "dimaag phatna"],
        "medication": "Painkillers (Sumatriptan)",
        "warning": "Avoid triggers"
    },
    "epilepsy": {
        "hinglish": ["‡§Æ‡§ø‡§∞‡•ç‡§ó‡•Ä", "mirgi", "fits", "jhatke", "seizure"],
        "medication": "Anti-seizure (Carbamazepine)",
        "warning": "Don‚Äôt stop meds suddenly"
    },
    "parkinson": {
        "hinglish": ["‡§™‡§æ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§∏‡§Ç‡§∏", "parkinson", "hath kaanpna"],
        "medication": "Levodopa",
        "warning": "Physical therapy"
    },
    "alzheimer": {
        "hinglish": ["‡§≠‡•Ç‡§≤‡§®‡•á ‡§ï‡•Ä ‡§¨‡•Ä‡§Æ‡§æ‡§∞‡•Ä", "alzheimer", "yaadashth jaana"],
        "medication": "Memantine",
        "warning": "Mental exercises"
    },
    "breast cancer": {
        "hinglish": ["‡§∏‡•ç‡§§‡§® ‡§ï‡•à‡§Ç‡§∏‡§∞", "stan cancer", "boob ka cancer"],
        "medication": "Chemo, Surgery",
        "warning": "Early detection key"
    },
    "lung cancer": {
        "hinglish": ["‡§´‡•á‡§´‡§°‡§º‡•ã‡§Ç ‡§ï‡§æ ‡§ï‡•à‡§Ç‡§∏‡§∞", "phephdon ka cancer", "cough cancer"],
        "medication": "Targeted therapy",
        "warning": "No smoking"
    },
    "prostate cancer": {
        "hinglish": ["‡§™‡•ç‡§∞‡•ã‡§∏‡•ç‡§ü‡•á‡§ü ‡§ï‡•à‡§Ç‡§∏‡§∞", "prostate cancer", "male cancer"],
        "medication": "Hormone therapy",
        "warning": "Regular PSA test"
    },
    "leukemia": {
        "hinglish": ["‡§¨‡•ç‡§≤‡§° ‡§ï‡•à‡§Ç‡§∏‡§∞", "blood cancer", "rakht ka cancer"],
        "medication": "Bone marrow transplant",
        "warning": "Avoid infections"
    },
    "eczema": {
        "hinglish": ["‡§è‡§ï‡•ç‡§ú‡§ø‡§Æ‡§æ", "eczema", "skin allergy", "khujli wali bimari"],
        "medication": "Steroid creams",
        "warning": "Avoid allergens"
    },
    "psoriasis": {
        "hinglish": ["‡§∏‡•ã‡§∞‡§æ‡§Ø‡§∏‡§ø‡§∏", "psoriasis", "safed daag"],
        "medication": "Immunosuppressants",
        "warning": "No scratching"
    },
    "acne": {
        "hinglish": ["‡§Æ‡•Å‡§Ç‡§π‡§æ‡§∏‡•á", "muhase", "pimples", "daane"],
        "medication": "Retinoids, Antibiotics",
        "warning": "Don‚Äôt pop pimples"
    },
    "ringworm": {
        "hinglish": ["‡§¶‡§æ‡§¶", "daad", "fungal infection", "gola daag"],
        "medication": "Antifungal (Clotrimazole)",
        "warning": "Keep dry & clean"
    }
}

# Disease detection logic
def detect_disease(text):
    text = text.lower()
    for disease, info in DISEASE_DATABASE.items():
        for keyword in info["hinglish"]:
            if keyword in text:
                return disease, info
    return None, None

# Respond with medication and warning
def respond(disease, info):
    response = f"{disease.title()} detected.\nMedication: {info['medication']}\nWarning: {info['warning']}"
    print(response)
    engine.say(response)
    engine.runAndWait()

# Listen from mic
def listen():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("üé§ Speak now...")
        audio = r.listen(source, phrase_time_limit=5)
        try:
            text = r.recognize_google(audio, language='hi-IN')
            print(f"üó£ You said: {text}")
            return text
        except sr.UnknownValueError:
            print("‚ùå Could not understand audio.")
        except sr.RequestError:
            print("‚ö† Could not request results.")
    return ""

# Main loop
if _name_ == "_main_":
    print("‚úÖ Disease Detection AI (Voice/Text)")
    print("Type 'voice' to use mic or type symptoms manually.")
    while True:
        mode = input("Enter 'voice', 'text', or 'exit': ").strip().lower()
        if mode == "voice":
            spoken_text = listen()
            if spoken_text:
                disease, info = detect_disease(spoken_text)
                if disease:
                    respond(disease, info)
                else:
                    print("‚ùì Disease not recognized.")